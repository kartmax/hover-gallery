/* USER VARIABLES SECTION */

:root {
   --index: calc(1vw + 1vh);
   --transition: cubic-bezier(.07,.38,0,.99);
}


/* BOOTSTRAP SETTINGS SECTION */

/* gutter 20px (10px + 10px). Comment this code for default gutter start at 1.5rem (24px) wide. */
.container, .container-fluid, .container-lg, .container-md, .container-sm, .container-xl, .container-xxl { --bs-gutter-x: .625rem; }
.row, .row > * { --bs-gutter-x: 1.25rem; }


/* GENERAL CSS SETTINGS */

body {
	min-width: 320px;
	position: relative;
	overflow-x: hidden;
   background-color: #141414;
}


/* USER STYLES */

.image {
	max-width: 100%;
	margin-bottom: var(--bs-gutter-x);
	border-radius: 4px;
}

.accent {
	color: var(--accent);
	font-weight: bold;
}


/* ITEMS */

.wrapper-items {
   display: flex;
   justify-content: center;
   align-items: center;
   height: 100vh;
}

.items {
   display: flex;
   gap: .4rem;
   perspective: calc(var(--index) * 35);
}

.item {
   background-color: #222;
   width: calc(var(--index) * 3);
   height: calc(var(--index) * 12);
   background-size: cover;
   background-position: center;
   transition: transform 1.25s var(--transition), filter .5s var(--transition), width .8s var(--transition);
   will-change: transform, filter;
   filter: grayscale() brightness(.5);
   cursor: pointer;
}

.item::before, .item::after {
   content: '';
   position: absolute;
   width: calc(var(--index) * 1);
   height: 100%;
   right: calc(var(--index) * -1);
}
.item::after {
   left: calc(var(--index) * -1);
}

.items .item:hover {
   transform: translateZ(calc(var(--index) * 10));
   filter: inherit;
}

/* Right items */
.items .item:hover + * {
   transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
   z-index: -1;
   filter: inherit;
}
.items .item:hover + * + * {
   transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
   z-index: -2;
   filter: inherit;
}
.items .item:hover + * + * + * {
   transform: translateZ(calc(var(--index) * 2.4)) rotateY(30deg);
   z-index: -3;
   filter: inherit;
}
.items .item:hover + * + * + * + * {
   transform: translateZ(calc(var(--index) * .6)) rotateY(14deg);
   z-index: -4;
   filter: inherit;
}

/* Left items */
.item:has(+ :hover) {
   transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
   filter: inherit;
}
.item:has(+ * + :hover) {
   transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
   filter: inherit;
}
.item:has(+ * + * + :hover) {
   transform: translateZ(calc(var(--index) * 2.4)) rotateY(-30deg);
   filter: inherit;
}
.item:has(+ * + * + * + :hover) {
   transform: translateZ(calc(var(--index) * .6)) rotateY(-14deg);
   filter: inherit;
}

/* Active and Focus */
.items .item:active, 
.items .item:focus {
   width: 28vw;
   transform: translateZ(calc(var(--index) * 10));
   z-index: 10;
   filter: inherit;
   margin: 0 .45vw;
}
.items .item:first-child:active,
.items .item:first-child:focus {
   transform: translateX(calc(var(--index)));
}
.items .item:last-child:active,
.items .item:last-child:focus {
   transform: translateX(calc(var(--index) * -1));
}
